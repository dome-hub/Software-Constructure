public void importDataTotable() {
    try (FileInputStream fis = new FileInputStream("ExpenseTracker22.xlsx");
         Workbook workbook = new XSSFWorkbook(fis)) {
        
        Sheet sheet = workbook.getSheetAt(0);
        tableModel.setRowCount(0);

        ArrayList<Vector<Object>> data = new ArrayList<>();

        for (int i = 1; i <= sheet.getLastRowNum(); i++) {
            Row row = sheet.getRow(i);
            Vector<Object> rowData = new Vector<>();
            
            // Date
            rowData.add(row.getCell(0).getStringCellValue());
            
            // Month
            rowData.add(row.getCell(1).getStringCellValue());
            
            // Type
            rowData.add(row.getCell(2).getStringCellValue());
            
            // Money - แน่ใจว่าเป็น Double
            Cell moneyCell = row.getCell(3);
            if (moneyCell.getCellType() == CellType.NUMERIC) {
                rowData.add(moneyCell.getNumericCellValue());
            } else {
                rowData.add(Double.parseDouble(moneyCell.getStringCellValue()));
            }
            
            // Note
            rowData.add(row.getCell(4).getStringCellValue());
            
            data.add(rowData);
        }

        // เรียงข้อมูลตามเดือนและวันที่
        Collections.sort(data, new Comparator<Vector<Object>>() {
            @Override
            public int compare(Vector<Object> o1, Vector<Object> o2) {
                int monthComparison = Integer.compare(getMonthIndex((String) o1.get(1)), getMonthIndex((String) o2.get(1)));
                if (monthComparison != 0) {
                    return monthComparison;
                }
                int day1 = Integer.parseInt((String) o1.get(0));
                int day2 = Integer.parseInt((String) o2.get(0));
                return Integer.compare(day1, day2);
            }
        });

        // เพิ่มข้อมูลลง JTable หลังจากเรียงข้อมูลเสร็จ
        for (Vector<Object> rowData : data) {
            tableModel.addRow(rowData);
        }

        // อัปเดตสรุปและ UI
        SwingUtilities.invokeLater(() -> {
            updateSummary();
            repaint(); // เพิ่มการ repaint เพื่อให้แน่ใจว่า UI จะอัปเดต
        });
        
        JOptionPane.showMessageDialog(this, "Data Imported, Sorted, and Summary Updated Successfully!");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error importing data: " + e.getMessage());
    }
}
